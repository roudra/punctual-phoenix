plugins {
    id 'java'
    id 'io.quarkus'
    id "org.sonarqube" version "3.3"
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")

    //    implementation 'io.quarkus:quarkus-container-image-jib' -- Will enable if i decide not to use Dockerfiles.
    implementation 'io.quarkus:quarkus-kubernetes'

    implementation 'io.quarkus:quarkus-resteasy-reactive'
    implementation 'io.quarkus:quarkus-resteasy-reactive-jackson'
    implementation 'io.quarkus:quarkus-arc'

    implementation "io.quarkus:quarkus-smallrye-health"
    implementation 'io.quarkus:quarkus-smallrye-openapi'

    compileOnly "org.projectlombok:lombok:${lombok}"
    annotationProcessor "org.projectlombok:lombok:${lombok}"

    testCompileOnly "org.projectlombok:lombok:${lombok}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombok}"

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'io.quarkus:quarkus-jacoco'
    testImplementation "com.intuit.karate:karate-junit5:${karateVersion}"

    //Added below lines to remove error with Karate graalvm.js
//    implementation "org.graalvm.js:js:${graalvmPluginVersion}"
//    implementation "org.graalvm.js:js-scriptengine:${graalvmPluginVersion}"
//    implementation "org.graalvm.sdk:graal-sdk:${graalvmPluginVersion}"
//    implementation "org.graalvm.truffle:truffle-api:${graalvmPluginVersion}"
}

group 'org.rr'
version '1.0.14'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

sonarqube {
    properties {
        property "sonar.projectKey", "roudra_punctual-phoenix"
        property "sonar.organization", "roudra"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.jacoco.reportPaths", "build/jacoco-quarkus.exec"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/jacoco-report/jacoco.xml"
    }
}

sourceSets {
    test {
        resources {
            srcDir file('src/test/java')
            exclude '**/*.java'
        }
    }
}

test {
    useJUnitPlatform()
    exclude '**/it/*'
    ignoreFailures = true
    systemProperty "karate.options", System.properties.getProperty("karate.options")
    systemProperty "karate.env", System.properties.getProperty("karate.env")
    outputs.upToDateWhen { false }
}