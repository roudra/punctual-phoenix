name: Final CI/CD

env:
  APP_NAME: "punctual-phoenix-kn-native"
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_REGISTRY_USER: ${{ github.actor }}
  IMAGE_REGISTRY_PASSWORD: ${{ github.token }}
  IMAGE_TAGS: ""
on:
  push:
    branches:
      - main
      - development

permissions:
  contents: read

jobs:
  create-environment:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
    - name: 'Setup GraalVM Environment'
      uses: DeLaGuardo/setup-graalvm@5.0
      with:
        graalvm: '22.0.0.2'
        java: 'java11'  
    - name: 'Install Native Image Plugin'
      run: |
        gu install native-image
        echo "âœ… GraalVM Native Plugin Installation Successful"

  test-and-package:
    name: Test and Build Native Image.
    needs: create-environment
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - run: |
          echo "âœ… Checkout Successful"
          ls -lrt
    - run: |
        ./gradlew clean build -Dquarkus.package.type=native -Dquarkus.native.container-build=true
        echo "âœ… Native Image build Successful"

    - name: Get Version Number
      run: echo "APP_VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV
    - name: Determine image tags
      if: env.IMAGE_TAGS == ''
      run: |
        echo "IMAGE_TAGS=latest ${APP_VERSION} ${GITHUB_SHA::12}" | tee -a $GITHUB_ENV
    - name: Build from Dockerfile
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.APP_NAME }}
        tags: ${{ env.IMAGE_TAGS }}
        dockerfiles: |
          ./src/main/docker/Dockerfile.native
    - name: Push to registry
      id: push-image
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ env.IMAGE_REGISTRY_USER }}
        password: ${{ env.IMAGE_REGISTRY_PASSWORD }}
    - name: Print Details
      run: |
        echo "ðŸ“Œ APP NAME ${APP_NAME}"
        echo "ðŸ“Œ DOCKER TAG ${IMAGE_TAGS}"
        echo "ðŸ“Œ Image ${{ steps.push-image.outputs.registry-path }}"